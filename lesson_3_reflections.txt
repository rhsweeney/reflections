When would you want to create a remote repository rather than keeping all your work locally?
Probably when you wanna collab with other people or show off your stuff. Also for data back up!

Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?
Same reason as why Git doesn't auto-save. Sometimes you're just not ready for 
your changes to be pushed publicly. I know Caroline mentioned earlier that 
you may want the feature you are working on to be fully completed before pushing 
it into the public domain (aka GitHub).

Describe the differences between forks, clones, and branches. When would you use 
one instead of another?
ANSWER
Fork: this is the same as cloning except it is all done on GitHub servers (aka 
not your local machine). So it's cloning the repo on GitHub servers and associating 
that cloned repo (aka fork) with your GitHub account. You would use this when 
you want to make a copy of someone's repo to edit indenpendently. Especially if 
you do not have permission to edits someone's repo
Clone: Cloning a repo makes an exact copy of a repo. this is done on your local 
machine. You can clone a repo from GitHub to bring it down to your local machine 
or you can even clone a repo that is already on your local machine to a different 
location on your machine.
Branch: A "split" within the same repo. Whereas Fork and Clone both make 
completely new repos.

What is the benefit of having a copy of the last known state of the remote stored 
locally?
Ummm, well it allows you to keep track of how far your current, local master 
branch has gotten ahead of the origin/master branch and thus could give you a 
better sense of when you should push to origin next. It also allows Git to keep 
track of the differences between origin and origin/master and master when you 
do a pull or fetch.

How would you collaborate without using Git or GitHub? What would be easier, and 
what would be harder?
Fudge me man. I dunno. I guess at the very beginning of the course we talked 
about other platforms like Google Drive or Dropbox but those aren't really 
designed for code cuz they do stuff like saving automatically rather than letting 
the developer choose when the best logical commit/save point is. So I think Git 
and GitHub are way better than that. Otherwise you could go with a competitor 
like SVN. But other than that you'd essentially be designing a system that is 
better than Git/GitHub and at that point you might as well build it and start 
a company with it and I don't feel like doing that cuz I don't really care to 
start a business in that so I'm not gonna bother thinking about it.



